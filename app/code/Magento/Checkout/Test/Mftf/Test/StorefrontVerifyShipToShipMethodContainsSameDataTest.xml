<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontVerifyShipToShipMethodContainsSameDataTest">
        <annotations>
            <features value="Checkout"/>
            <stories value="Guest checkout"/>
            <title value="Ship To and Shipping Method blocks on Checkout contain actual information according to inputed data"/>
            <description value="Ship To and Shipping Method blocks on Checkout contain actual information according to inputed data"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-4628"/>
        </annotations>
        <before>
            <!-- Enable free shipping -->
            <createData entity="FreeShippingMethodsSettingConfig" stepKey="freeShippingMethodsSettingConfig"/>
            <!-- create category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <!-- create simple product -->
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <!-- delete category -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <!-- delete simple product -->
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
        </after>
        <!--  Step 1: Go to Storefront as Guest -->
        <!--  Step 2: Add simple product to shopping cart -->
        <amOnPage url="{{StorefrontProductPage.url($createProduct.custom_attributes[url_key]$)}}" stepKey="amOnSimpleProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="AddToCartFromStorefrontProductPageActionGroup" stepKey="cartAddSimpleProductToCart">
            <argument name="productName" value="$createProduct.name$"/>
        </actionGroup>
        <!-- Proceed to Checkout -->
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickToOpenCard"/>
        <click selector="{{StorefrontMinicartSection.goToCheckout}}" stepKey="clickToProceedToCheckout"/>
        <waitForPageLoad stepKey="waitForTheFormIsOpened"/>
        <!-- verify shipping screen is opened -->
        <seeElement selector="{{CheckoutShippingSection.isShippingStep}}" stepKey="shippingStepIsOpened"/>
        <!--Fill Shipping Form-->
        <!--Filling shipping information and click next-->
        <actionGroup ref="GuestCheckoutFillingShippingSectionActionGroup" stepKey="guestCheckoutFillingShipping">
            <argument name="shippingMethod" value="Flat Rate"/>
        </actionGroup>
        <!--Review & Payments step of checkout is opened-->
        <!--Verify Billing address is correct-->
        <actionGroup ref="CheckShipToInformationInCheckoutActionGroup" stepKey="checkoutCheckShipToInformation">
            <argument name="customerVar" value="CustomerEntityOne" />
            <argument name="customerAddressVar" value="CustomerAddressSimple" />
        </actionGroup>
        <!-- Assert Shipping Method = "Flat Rate" -->
        <see userInput="Flat Rate - Fixed" selector="{{CheckoutPaymentSection.orderSummaryShippingMethod}}" stepKey="assertShippingMethod"/>
        <!-- Reload Page and wait for page to get reload -->
        <reloadPage stepKey="refreshPage"/>
        <waitForPageLoad stepKey="waitForPageLoad"/>
        <!-- Check that "Ship To" block contains correct information -->
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.firstName}}" stepKey="seeShipToFirstName" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.lastName}}" stepKey="seeShipToLastName" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.street[0]}}" stepKey="seeShipToStreet" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.city}}" stepKey="seeShipToCity" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.state}}" stepKey="seeShipToState" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.postcode}}" stepKey="seeShipToPostcode" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.telephone}}" stepKey="seeShipToTelephone" />
        <!-- Assert Shipping Method = "Flat Rate" -->
        <see userInput="Flat Rate - Fixed" selector="{{CheckoutPaymentSection.orderSummaryShippingMethod}}" stepKey="assertShippingMethodAgain"/>
       <!-- click on Edit button next to "Ship To" Text -->
        <click selector="{{CheckoutPaymentSection.editShipToInformation}}" stepKey="clickOnEditButton"/>
        <actionGroup ref="GuestCheckoutFillingShippingSectionActionGroup" stepKey="guestCheckoutFillingShippingSectionAgain">
            <argument name="customerVar" value="CustomerEntityOne"/>
            <argument name="customerAddressVar" value="CustomerAddressSimple"/>
        </actionGroup>
        <!-- Check that "Ship To" block contains correct information -->
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerEntityOne.firstname}}" stepKey="seeShipToFirstNameAgain" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerEntityOne.lastname}}" stepKey="seeShipToLastNameAgain" />
        <see selector="{{CheckoutPaymentSection.shipToInformation}}" userInput="{{CustomerAddressSimple.city}}" stepKey="seeShipToCityAgain" />
        <!-- Assert Shipping Method = "Free Shipping" -->
        <see userInput="Free Shipping - Free" selector="{{CheckoutPaymentSection.orderSummaryShippingMethod}}" stepKey="assertFreeShippingMethod"/>
        <!-- click on Edit button next to "Shipping Method" Text -->
        <click selector="{{CheckoutPaymentSection.editShipMethodInformation}}" stepKey="clickOnEditShippingMethodButton"/>
        <!-- Assert that it has scrolled to Shipping Method text -->
        <waitForElementVisible selector="{{CheckoutPaymentSection.success}}" stepKey="waitForShippingMethodTitle"/>
        <scrollTo selector="{{CheckoutPaymentSection.shippingMethodTitle}}" stepKey="scrollToShippingMethodTitle"/>
        <see selector="{{CheckoutPaymentSection.shippingMethodTitle}}" userInput="Shipping Methods" stepKey="seeShippingMethodTitle"/>
    </test>
</tests>
