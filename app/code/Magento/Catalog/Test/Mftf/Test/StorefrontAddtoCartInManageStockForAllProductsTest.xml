<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAddtoCartInManageStockForAllProductsTest">
        <annotations>
            <stories value="Enabling Manage Stock During Product Creation"/>
            <title value="Update Product with (Out of Stock) Visible in Category when Manage Stock is No in config"/>
            <description value="Customer shouldn't be able to see add to cart button in storefront if product is Out Of Stock"/>
            <testCaseId value="AC-4167"/>
            <severity value="MAJOR"/>
            <group value="catalog"/>
        </annotations>
        <before>
            <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableSimpleProduct"/>
            <!-- Login to Admin Panel -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <createData entity="SimpleProduct3" stepKey="createSimpleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <actionGroup ref="DeleteProductsIfTheyExistActionGroup" stepKey="deleteAllProductsFromGrid"/>
            <wait time="10" stepKey="waitToDeleteAttribute"/>
            <deleteData stepKey="deleteSubCategory" createDataKey="createCategory"/>
            <deleteData createDataKey="createFirstConfigProductAttribute" stepKey="deleteFirstConfigAttribute"/>
            <magentoCLI command="indexer:reindex" stepKey="performReindex1"/>
            <magentoCLI command="cache:flush" stepKey="cleanCache5"/>
            <!--Logout From Admin Panel -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAsAdmin"/>
        </after>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openSimpleProductEditPage">
            <argument name="productId" value="$createSimpleProduct.id$"/>
        </actionGroup>
        <wait time="10" stepKey="waitToManagestockForSimpleProduct"/>
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink1"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig1">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <actionGroup ref="AdminFillAdvancedInventoryQtyActionGroup" stepKey="fillProductQty1">
            <argument name="qty" value="500"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneButton1"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveSimpleProduct"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex1">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openCategoryPage">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$createSimpleProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeProductInCategory"/>
        <!-- Admin Logged in-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainSimpleProductEditPage">
            <argument name="productId" value="$createSimpleProduct.id$"/>
        </actionGroup>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForPageLoad stepKey="waitForstockTobeLoaded2"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfSimpleItemStockStatus">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveSimpleProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex2">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openCategoryPage1">
                <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
            <!-- Should not see any products in category -->
            <dontSee userInput="$createSimpleProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage2">
                <argument name="productUrl" value="$createSimpleProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCartBtn1"/>
        <!-- Set ManageStock to Yes-->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} 1" stepKey="manageStockEnable1"/>
        <magentoCLI command="cache:flush" stepKey="cleanCache2"/>
        <!-- ManageStock For Virtual Product-->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableVirtualItem"/>
        <createData entity="defaultVirtualProduct" stepKey="initialVirtualProduct">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex3">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Search default virtual product in the grid page -->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openVirtualProductEditPage">
            <argument name="productId" value="$initialVirtualProduct.id$"/>
        </actionGroup>
        <!-- Manage Stock Advanced Inventory Section-->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink2"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig2">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <actionGroup ref="AdminFillAdvancedInventoryQtyActionGroup" stepKey="fillProductQty2">
            <argument name="qty" value="500"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneButton3"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveVirtualProduct"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex3">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openCategoryPageVirtualProduct">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$initialVirtualProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeVirtualProductInCategory"/>
        <!-- Admin Logged in-->
        <waitForPageLoad stepKey="waitForItemPageTobeLoaded1"/>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainVirtualProductEditPage">
            <argument name="productId" value="$initialVirtualProduct.id$"/>
        </actionGroup>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForPageLoad stepKey="waitForstockTobeLoaded4"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfStockStatusVirtualItem">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveVirtualProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex4">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openVirtualCategoryPage1">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should not see any products in category -->
        <dontSee userInput="$initialVirtualProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeVirtualProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage4">
            <argument name="productUrl" value="$initialVirtualProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCartBtn4"/>
        <magentoCLI command="cache:flush" stepKey="cleanCache4"/>
        <!-- Set ManageStock to Yes-->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} 1" stepKey="manageStockEnable4"/>
        <!-- Manage Stock For Downloadable Product -->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableDownloadable"/>
        <magentoCLI stepKey="addDownloadableDomain" command="downloadable:domains:add static.magento.com"/>
        <!-- Create downloadable product -->
        <createData entity="DownloadableProduct" stepKey="createDownloadableProduct"/>
        <createData entity="ApiDownloadableLink" stepKey="addDownloadableLink">
            <requiredEntity createDataKey="createDownloadableProduct"/>
        </createData>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openDownloadableProductEditPage">
            <argument name="productId" value="$createDownloadableProduct.id$"/>
        </actionGroup>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex7">
            <argument name="indices" value=""/>
        </actionGroup>
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$createCategory.name$$]" stepKey="fillDowmloadCategory"/>
        <wait time="10" stepKey="waitToManagestockForDownloadProduct"/>
        <!-- Manage Stock Advanced Inventory Section-->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink3"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig3">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <actionGroup ref="AdminFillAdvancedInventoryQtyActionGroup" stepKey="fillProductQty3">
            <argument name="qty" value="500"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneBtn2"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveDownloadableProduct"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openDownloadableCategoryPage">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$createDownloadableProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeDownloadableProductInCategory"/>
        <!-- Admin Logged in-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainDownloadableProductEditPage">
            <argument name="productId" value="$createDownloadableProduct.id$"/>
        </actionGroup>
        <magentoCLI command="indexer:reindex" stepKey="performReindex8"/>
        <magentoCLI command="cache:flush" stepKey="flushMagentoCache"/>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForPageLoad stepKey="waitForstockTobeLoaded5"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfStockStatusDownloadItem">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveDownloadProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex5">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openDownloadableCategoryPage1">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should not see any products in category -->
        <dontSee userInput="$createDownloadableProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeDownloadableProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductPage8">
            <argument name="productUrl" value="$createDownloadableProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCartBtn8"/>
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} 1" stepKey="manageStockEnable8"/>
        <magentoCLI command="cache:flush" stepKey="cleanCache8"/>
        <!-- Manage Stock For Grouped Product -->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableGroupedItem"/>
        <createData entity="SimpleProduct2" stepKey="createFirstSimpleProduct"/>
        <createData entity="ApiGroupedProduct2" stepKey="createGroupedProduct">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <createData entity="OneSimpleProductLink" stepKey="addFirstProduct">
            <requiredEntity createDataKey="createGroupedProduct"/>
            <requiredEntity createDataKey="createFirstSimpleProduct"/>
        </createData>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openGroupedProductEditPage">
            <argument name="productId" value="$createGroupedProduct.id$"/>
        </actionGroup>
        <!-- Manage Stock Advanced Inventory Section-->
        <waitForPageLoad stepKey="waitForPageLoad2"/>
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink4"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig4">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneButton2"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveGroupedProduct"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runMagentoCronIndex1">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openGroupedCategoryPage">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$createGroupedProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeGroupedProductInCategory"/>
        <!-- Admin Logged in-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainGroupedProductEditPage">
            <argument name="productId" value="$createGroupedProduct.id$"/>
        </actionGroup>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForPageLoad stepKey="waitForstockOptionToLoad"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfStockStatusGroupedProduct">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveGroupedProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex7">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openGroupedCategoryPage1">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should not see any products in category -->
        <dontSee userInput="$createGroupedProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeGroupedProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openProductListingPage">
            <argument name="productUrl" value="$createGroupedProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCart1"/>
        <!-- Set ManageStock to Yes-->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} 1" stepKey="manageStockEnableGoupedItem"/>
        <magentoCLI command="cache:flush" stepKey="cleanCache1"/>
        <!-- Manage Stock For Bundle Product -->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableForBundleItem"/>
        <createData entity="_defaultProduct" stepKey="createSimpleProduct1">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <createData entity="_defaultProduct" stepKey="createSimpleProduct2">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <createData entity="ApiBundleProductPriceViewRange" stepKey="createBundleProduct">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <createData entity="DropDownBundleOption" stepKey="bundleOption">
            <requiredEntity createDataKey="createBundleProduct"/>
        </createData>
        <createData entity="ApiBundleLink" stepKey="createBundleLink1">
            <requiredEntity createDataKey="createBundleProduct"/>
            <requiredEntity createDataKey="bundleOption"/>
            <requiredEntity createDataKey="createSimpleProduct1"/>
        </createData>
        <createData entity="ApiBundleLink" stepKey="createBundleLink2">
            <requiredEntity createDataKey="createBundleProduct"/>
            <requiredEntity createDataKey="bundleOption"/>
            <requiredEntity createDataKey="createSimpleProduct2"/>
        </createData>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openBundleProductEditPage">
            <argument name="productId" value="$createBundleProduct.id$"/>
        </actionGroup>
        <!-- Manage Stock Advanced Inventory Section-->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink5"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig5">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneBtn1"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveBundleProduct"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runMagentocronIndex2">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openBundleCategoryPage">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$createBundleProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeBundleProductInCategory"/>
        <!-- Admin Logged in-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainBundleProductEditPage">
            <argument name="productId" value="$createBundleProduct.id$"/>
        </actionGroup>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForPageLoad stepKey="waitForstockStatusTobeLoaded"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfStockStatusForBundleProduct">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveBundleProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex9">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openBundleCategoryPage1">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should not see any products in category -->
        <dontSee userInput="$createBundleProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeBundleProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openBundleProductPage1">
            <argument name="productUrl" value="$createBundleProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCartBtn3"/>
        <magentoCLI command="cache:flush" stepKey="cleanCache3"/>
        <!-- Manage Stock For Configurable Product -->
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} {{CatalogInventoryManageStockDisable.value}}" stepKey="manageStockdisableConfigproduct"/>
        <!-- Create  configurable product with two options -->
        <createData entity="ApiConfigurableProduct" stepKey="createFirstConfigProduct">
            <requiredEntity createDataKey="createCategory"/>
        </createData>
        <createData entity="productAttributeWithTwoOptions" stepKey="createFirstConfigProductAttribute"/>
        <createData entity="productAttributeOption1" stepKey="createFirstConfigProductAttributeFirstOption">
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
        </createData>
        <createData entity="productAttributeOption2" stepKey="createFirstConfigProductAttributeSecondOption">
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
        </createData>
        <createData entity="AddToDefaultSet" stepKey="addFirstProductToAttributeSet">
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
        </createData>
        <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getFirstConfigAttributeFirstOption">
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
        </getData>
        <!-- Create one child product for configurable product -->
        <createData entity="ApiSimpleOne" stepKey="createFirstConfigFirstChildProduct">
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            <requiredEntity createDataKey="getFirstConfigAttributeFirstOption"/>
        </createData>
        <createData entity="ConfigurableProductOneOption" stepKey="createFirstConfigProductOption">
            <requiredEntity createDataKey="createFirstConfigProduct"/>
            <requiredEntity createDataKey="createFirstConfigProductAttribute"/>
            <requiredEntity createDataKey="getFirstConfigAttributeFirstOption"/>
        </createData>
        <createData entity="ConfigurableProductAddChild" stepKey="createFirstConfigProductAddFirstChild">
            <requiredEntity createDataKey="createFirstConfigProduct"/>
            <requiredEntity createDataKey="createFirstConfigFirstChildProduct"/>
        </createData>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openConfigurableProductEditPage">
            <argument name="productId" value="$createFirstConfigProduct.id$"/>
        </actionGroup>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reIndex">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Manage Stock Advanced Inventory Section-->
        <actionGroup ref="AdminClickOnAdvancedInventoryLinkActionGroup" stepKey="clickOnAdvancedInventoryLink6"/>
        <actionGroup ref="AdminSetManageStockConfigActionGroup" stepKey="setManageStockConfig6">
            <argument name="value" value="Yes"/>
        </actionGroup>
        <actionGroup ref="AdminFillAdvancedInventoryQtyActionGroup" stepKey="fillProductQty6">
            <argument name="qty" value="500"/>
        </actionGroup>
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickOnDoneBtn"/>
        <!-- Save Product Page-->
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveConfigurableProduct"/>
        <magentoCLI command="indexer:reindex" stepKey="performreIndex"/>
        <magentoCLI command="cache:flush" stepKey="cleanMagentoCache"/>
        <!-- Navigate to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openConfigurableCategoryPage">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should  see any products in category -->
        <see userInput="$createFirstConfigProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="seeConfigurableProductInCategory"/>
        <!-- Admin Logged in-->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openAgainConfigurableProductEditPage">
            <argument name="productId" value="$createFirstConfigProduct.id$"/>
        </actionGroup>
        <magentoCLI command="indexer:reindex" stepKey="performReIndex"/>
        <magentoCLI command="cache:flush" stepKey="flushCache2"/>
        <!-- Set Stock Status of Product to Out Of Stock-->
        <waitForElementClickable selector="{{AdminProductFormSection.advancedInventoryLink}}" stepKey="waitForAdvancedInventoryLinkToClickable"/>
        <click selector="{{AdminProductFormSection.advancedInventoryLink}}" stepKey="goToAdvancedInventory"/>
        <!-- Uncheck Manage Stock Use Config Settings-->
        <uncheckOption selector="{{AdminProductFormAdvancedInventorySection.useConfigSettings}}" stepKey="uncheckManangeStockConfigCheckbox"/>
        <!-- Set Manage Stock to Yes-->
        <selectOption selector="{{AdminProductFormAdvancedInventorySection.manageStock}}"  userInput="Yes" stepKey="changeManageStockToYes"/>
        <actionGroup ref="AdminSetStockStatusActionGroup" stepKey="outOfStockStatusConfigItem">
            <argument name="stockStatus" value="Out of Stock"/>
        </actionGroup>
        <!-- Save Advanced Inventory Section-->
        <actionGroup ref="AdminSubmitAdvancedInventoryFormActionGroup" stepKey="clickDoneBtn"/>
        <actionGroup ref="SaveProductFormActionGroup" stepKey="saveConfigurableProduct1"/>
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runMagentoCronIndex">
            <argument name="indices" value=""/>
        </actionGroup>
        <!-- Navigate Again to Storefront -->
        <actionGroup ref="StorefrontNavigateToCategoryUrlActionGroup" stepKey="openConfigurableCategoryPage1">
            <argument name="categoryUrl" value="$$createCategory.custom_attributes[url_key]$$"/>
        </actionGroup>
        <!-- Should not see any products in category -->
        <dontSee userInput="$createFirstConfigProduct.name$" selector="{{StorefrontCategoryMainSection.productsList}}" stepKey="dontSeeConfigurableProductInCategory"/>
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openConfigProductPage1">
            <argument name="productUrl" value="$createFirstConfigProduct.custom_attributes[url_key]$"/>
        </actionGroup>
        <dontSeeElement selector="{{StorefrontProductActionSection.addToCart}}" stepKey="dontSeeAddToCart"/>
        <magentoCLI command="cache:flush" stepKey="cleanMagentoCache1"/>
        <magentoCLI command="config:set {{CatalogInventoryManageStockDisable.path}} 1" stepKey="manageStockEnableForConfigProduct"/>
        <wait time="10" stepKey="waitForNavigate"/>
    </test>
</tests>
