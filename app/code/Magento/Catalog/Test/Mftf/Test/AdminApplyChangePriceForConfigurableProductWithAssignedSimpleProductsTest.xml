<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminApplyChangePriceForConfigurableProductWithAssignedSimpleProductsTest">
        <annotations>
            <features value="Catalog"/>
            <stories value="Update price"/>
            <title value="Child Product price is updated according to updated prices from backend"/>
            <description value="Update the simple product price that is under configurable and validate the updated price in the front end"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-2031"/>
            <group value="Catalog"/>
            <group value="AllIndexerBySchedule" />
        </annotations>

        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <actionGroup ref="UpdateAllIndexerByScheduleActionGroup" stepKey="updateAnIndexerBySchedule"/>
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCache">
                <argument name="tags" value=""/>
            </actionGroup>
        </before>

        <after>
            <deleteData createDataKey="createFirstConfigProduct" stepKey="deleteConfigProduct"/>
            <deleteData createDataKey="createFirstConfigFirstChildProduct" stepKey="deleteFirstConfigFirstChildProduct"/>
            <deleteData createDataKey="firstSimpleCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createFirstConfigProductAttribute" stepKey="deleteFirstConfigProductAttribute"/>
            <comment userInput="The test was moved to elasticsearch suite" stepKey="resetCatalogSearchConfiguration"/>
            <actionGroup ref="AdminAllIndexerSetUpdateOnSaveActionGroup" stepKey="resetIndexerBackToOriginalState"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="performReindex">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="CliCacheFlushActionGroup" stepKey="cleanCache">
                <argument name="tags" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutOfAdmin"/>
        </after>

        <comment userInput="BIC workaround" stepKey="firstSimpleCategory"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProduct"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProductAttribute"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProductAttributeFirstOption"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProductAttributeSecondOption"/>
        <comment userInput="BIC workaround" stepKey="addFirstProductToAttributeSet"/>
        <comment userInput="BIC workaround" stepKey="getFirstConfigAttributeFirstOption"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigFirstChildProduct"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProductOption"/>
        <comment userInput="BIC workaround" stepKey="createFirstConfigProductAddFirstChild"/>

        <!-- Reindex -->
        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
            <argument name="indices" value=""/>
        </actionGroup>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanCache">
            <argument name="tags" value="full_page"/>
        </actionGroup>

        <!-- Assert first product in category -->
        <magentoCron stepKey="runCron"/>
        <magentoCron stepKey="runCron1"/>

        <amOnPage url="{{StorefrontCategoryPage.url($$firstSimpleCategory.custom_attributes[url_key]$$)}}" stepKey="goToFirstCategoryPageStorefront"/>
        <waitForPageLoad stepKey="waitForFirstCategoryPageLoad"/>

        <actionGroup ref="StorefrontCheckCategoryConfigurableProductWithUpdatedPriceActionGroup" stepKey="checkFirstProductPriceInCategory">
            <argument name="productName" value="$$createFirstConfigProduct.name$$"/>
            <argument name="expectedPrice" value="$$createFirstConfigFirstChildProduct.price$$"/>
        </actionGroup>

        <!-- Update simple product price -->
        <comment userInput="BIC workaround" stepKey="openProductCatalogPage"/>
        <comment userInput="BIC workaround" stepKey="filterProductGrid"/>
        <comment userInput="BIC workaround" stepKey="clickFirstRowToOpenDefaultSimpleProduct"/>
        <comment userInput="BIC workaround" stepKey="waitUntilProductIsOpened"/>
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="openProductEditPage">
            <argument name="productId" value="$createFirstConfigFirstChildProduct.id$"/>
        </actionGroup>
        <waitForElementVisible selector="{{AdminProductFormSection.productPrice}}" stepKey="waitForProductPriceField"/>
        <fillField selector="{{AdminProductFormSection.productPrice}}" userInput="150" stepKey="fillSimpleProductPrice"/>
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickButtonSave"/>
        <waitForText selector="{{AdminProductFormSection.successMessage}}" userInput="You saved the product." stepKey="seeAssertSimpleProductSaveSuccessMessage"/>

        <!-- Assert first product in category -->
        <magentoCron stepKey="runCron2"/>
        <wait time="60" stepKey="waitForUpdateStarts"/>

        <amOnPage url="{{StorefrontCategoryPage.url($$firstSimpleCategory.custom_attributes[url_key]$$)}}" stepKey="goToFirstCategoryPageStorefront1"/>
        <waitForPageLoad stepKey="waitForFirstCategoryPageLoad1"/>

        <actionGroup ref="StorefrontCheckCategoryConfigurableProductWithUpdatedPriceActionGroup" stepKey="checkFirstProductPriceInCategory1">
            <argument name="productName" value="$$createFirstConfigProduct.name$$"/>
            <argument name="expectedPrice" value="150"/>
        </actionGroup>
    </test>
</tests>
