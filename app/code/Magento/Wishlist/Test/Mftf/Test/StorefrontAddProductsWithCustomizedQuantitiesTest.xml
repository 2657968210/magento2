<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontAddProductsWithCustomizedQuantitiesTest">
        <annotations>
            <features value="Wishlist"/>
            <stories value="Add product to wishlist with customized quantities"/>
            <title value="Add simple product with customized quantities from product page"/>
            <description value="Add simple Product with customizable file option to Wishlist and verify customizable options are preserved"/>
            <severity value="AVERAGE"/>
            <testCaseId value="AC-8504"/>
            <useCaseId value="ACP2E-1784"/>
            <group value="wishlist"/>
        </annotations>
        <before>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <createData entity="ApiCategory" stepKey="createCategory"/>

            <!-- Create Simple product -->
            <createData entity="ApiSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create Grouped product -->
            <createData entity="ApiGroupedProduct" stepKey="createGroupedProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="OneSimpleProductLink" stepKey="addProductOne">
                <requiredEntity createDataKey="createGroupedProduct"/>
                <requiredEntity createDataKey="createProduct"/>
            </createData>

            <!-- Create Bundle product -->
            <createData entity="SimpleProduct2Price10Qty1" stepKey="simpleProduct1"/>
            <createData entity="BundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="createBundleOption1_1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="required">True</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>

            <!-- Create Configurable product -->
            <createData entity="ApiConfigurableProduct" stepKey="createConfigurableProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigurableProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigurableProductAttributeOption1">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigurableProductAttributeOption2">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
            </createData>
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
            </getData>
            <createData entity="ApiSimpleOne" stepKey="createConfigurableChildProduct1">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
            </createData>
            <createData entity="ApiSimpleTwo" stepKey="createConfigurableChildProduct2">
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductTwoOptions" stepKey="createConfigurableProductOption">
                <requiredEntity createDataKey="createConfigurableProduct"/>
                <requiredEntity createDataKey="createConfigurableProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
            </createData>
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigurableProductAddChild1">
                <requiredEntity createDataKey="createConfigurableProduct"/>
                <requiredEntity createDataKey="createConfigurableChildProduct1"/>
                <requiredEntity createDataKey="createConfigurableChildProduct2"/>
            </createData>

            <magentoCron groups="index" stepKey="reindexInvalidatedIndicesBeforeTest"/>
        </before>
        <after>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createConfigurableProduct" stepKey="deleteConfigurableProduct"/>
            <deleteData createDataKey="createConfigurableChildProduct1" stepKey="deleteConfigurableChildProduct1"/>
            <deleteData createDataKey="createConfigurableChildProduct2" stepKey="deleteConfigurableChildProduct2"/>
            <deleteData createDataKey="createConfigurableProductAttribute" stepKey="deleteConfigurableProductAttribute"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>
            <deleteData createDataKey="createGroupedProduct" stepKey="deleteGroupedProduct" />

            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
        </after>

        <!-- Login as a customer -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefrontAccount">
            <argument name="Customer" value="$createCustomer$"/>
        </actionGroup>

        <!-- Open Simple Product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openSimpleProductPage">
            <argument name="productUrl" value="$createProduct.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Add Simple product to the wishlist -->
        <actionGroup ref="StorefrontCustomerAddSimpleProductQuantityAndAddToWishListActionGroup" stepKey="addSimpleProductToWishlist">
            <argument name="productVar" value="$createProduct$"/>
            <argument name="quantity" value="100"/>
        </actionGroup>

        <!-- Open Grouped Product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openGroupedProductPage">
            <argument name="productUrl" value="$createGroupedProduct.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Add Grouped product to the wishlist -->
        <actionGroup ref="StorefrontCustomerAddGroupedProductQuantityAndAddToWishListActionGroup" stepKey="addGroupedProductToWishlist">
            <argument name="productVar" value="$createGroupedProduct$"/>
            <argument name="quantity" value="100"/>
        </actionGroup>

        <!-- Open Configurable Product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openConfigurableProductPage">
            <argument name="productUrl" value="$createConfigurableProduct.custom_attributes[url_key]$"/>
        </actionGroup>

        <!-- Add Configurable product to the wishlist -->
        <actionGroup ref="StorefrontCustomerAddConfigurableProductQuantityAndAddToWishListActionGroup" stepKey="addConfigurableProductToWishlist">
            <argument name="productVar" value="$createConfigurableProduct$"/>
            <argument name="quantity" value="100"/>
            <argument name="option" value="$$getConfigAttributeOption1.value$$" />
        </actionGroup>

        <!-- Open Bundle Product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="openBundleProductPage">
            <argument name="productUrl" value="$createBundleProduct.custom_attributes[url_key]$"/>
        </actionGroup>

        <!--Click "Customize and Add to Cart" button-->
        <click selector="{{StorefrontBundledSection.addToCart}}" stepKey="clickCustomize"/>

        <!-- Add Bundle product to the wishlist -->
        <actionGroup ref="StorefrontCustomerAddBundleProductQuantityAndAddToWishListActionGroup" stepKey="addBundleProductToWishlist">
            <argument name="productVar" value="$createBundleProduct$"/>
            <argument name="parentQuantity" value="100"/>
            <argument name="childQuantity" value="100" />
            <argument name="optionName" value="$$createBundleOption1_1.value$$" />
        </actionGroup>

        <!-- Assert Simple product is present in wishlist -->
        <actionGroup ref="AssertProductQuantityInWishlistActionGroup" stepKey="assertProductPresent">
            <argument name="productName" value="$createProduct.name$"/>
            <argument name="productQuantity" value="100"/>
        </actionGroup>

        <!-- Edit wishlist Simple product -->
        <actionGroup ref="StorefrontCustomerUpdateWishlistItemActionGroup" stepKey="clickEditWishlistItem">
            <argument name="productName" value="$createProduct.name$"/>
        </actionGroup>

        <!-- Update Simple product in wishlist from product page -->
        <actionGroup ref="StorefrontCustomerUpdateProductInWishlistActionGroup" stepKey="updateProductWithOptionInWishlist">
            <argument name="productVar" value="$createProduct$"/>
        </actionGroup>

        <actionGroup ref="AssertProductQuantityInWishlistActionGroup" stepKey="assertProductPresent2">
            <argument name="productName" value="$createProduct.name$"/>
            <argument name="productQuantity" value="100"/>
        </actionGroup>

        <!-- Go to Grouped PDP from Wishlist -->
        <actionGroup ref="StorefrontCustomerAccessGroupedProductFromWishlistActionGroup" stepKey="goToGroupedProductPage">
            <argument name="productVar" value="$createGroupedProduct.name$"/>
            <argument name="quantity" value="100"/>
        </actionGroup>

        <!-- Add Grouped product to the wishlist again -->
        <actionGroup ref="StorefrontCustomerAddGroupedProductQuantityAndAddToWishListActionGroup" stepKey="readdGroupedProductToWishlist">
            <argument name="productVar" value="$createGroupedProduct$"/>
            <argument name="quantity" value="100"/>
        </actionGroup>


        <!-- Go to Bundle PDP from Wishlist -->
        <actionGroup ref="StorefrontCustomerAccessProductFromWishlistActionGroup" stepKey="goToGroupedProductPage">
            <argument name="productVar" value="$createBundleProduct.name$"/>
            <argument name="quantity" value="100"/>
        </actionGroup>

        <!-- Add Bundle product to the wishlist -->
        <actionGroup ref="StorefrontCustomerAddBundleProductQuantityAndAddToWishListActionGroup" stepKey="readdBundleProductToWishlist">
            <argument name="productVar" value="$createBundleProduct$"/>
            <argument name="parentQuantity" value="100"/>
            <argument name="childQuantity" value="100" />
            <argument name="optionName" value="$$createBundleOption1_1.value$$" />
        </actionGroup>

    </test>
</tests>
