<?xml version="1.0" encoding="UTF-8"?>
<!--
/************************************************************************
 *
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: All information contained herein is, and remains
 * the property of Adobe and its suppliers, if any. The intellectual
 * and technical concepts contained herein are proprietary to Adobe
 * and its suppliers and are protected by all applicable intellectual
 * property laws, including trade secret and copyright laws.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe.
 * ************************************************************************
 */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontMultipleSelectAttributeInLayeredNavigationTest">
        <annotations>
            <features value="LayeredNavigation"/>
            <stories value="Product attributes in Layered Navigation"/>
            <title value="In Layered Navigation, attribute options with values of 0 are displayed just like other values or label."/>
            <description value="Filtering by dropdown attribute in Layered navigation for option value 0."/>
            <severity value="CRITICAL"/>
            <useCaseId value="ACP2E-3058"/>
            <testCaseId value="AC-11974"/>
            <group value="layeredNavigation"/>
            <group value="catalog"/>
        </annotations>
        <before>
            <createData entity="SimpleSubCategory" stepKey="createCategory"/>
            <!-- Create multi select product attribute -->
            <createData entity="productAttributeMultiselectTwoOptions" stepKey="createMultiSelectProductAttribute"/>
            <!-- Add options to created product attribute -->
            <createData entity="productAttributeOption" stepKey="addFirstOptionToAttribute">
                <field key="label">-1</field>
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption" stepKey="addSecondOptionToAttribute">
                <field key="label">0</field>
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
            </createData>
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getFirstMultiselectProductAttributeOption">
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
            </getData>
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getSecondMultiselectProductAttributeOption">
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
            </getData>
            <createData entity="AddToDefaultSet" stepKey="AddDropdownProductAttributeToAttributeSet">
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
            </createData>
            <!-- Assign attribute value to created products -->
            <createData entity="ApiSimpleProductWithCategory" stepKey="createSimpleProduct1">
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
                <requiredEntity createDataKey="getFirstMultiselectProductAttributeOption"/>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="ApiSimpleProductWithCategory" stepKey="createSimpleProduct2">
                <requiredEntity createDataKey="createMultiSelectProductAttribute"/>
                <requiredEntity createDataKey="getSecondMultiselectProductAttributeOption"/>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
            <!-- Login to Admin page -->
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createSimpleProduct1" stepKey="deleteFirstProduct"/>
            <deleteData createDataKey="createSimpleProduct2" stepKey="deleteSecondProduct"/>
            <deleteData createDataKey="createMultiSelectProductAttribute" stepKey="deleteMultiSelectProductAttribute"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="adminLogout"/>
        </after>
        <!-- Go to admin > product(second) edit page -->
        <actionGroup ref="AdminProductPageOpenByIdActionGroup" stepKey="goToProductEditPage">
            <argument name="productId" value="$createSimpleProduct2.id$"/>
        </actionGroup>
        <waitForPageLoad stepKey="waitForProductPageLoad"/>

        <!-- Open storefront category -->
        <actionGroup ref="StorefrontNavigateCategoryPageActionGroup" stepKey="openCategory">
            <argument name="category" value="$createCategory$"/>
        </actionGroup>

        <!-- Check filtration options for created attribute. All attribute options should be displayed -->
        <actionGroup ref="AssertStorefrontAttributeOptionPresentInLayeredNavigationActionGroup" stepKey="assertAttributeOption1PresentInLayeredNavigation">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getFirstMultiselectProductAttributeOption.label$"/>
            <argument name="attributeOptionPosition" value="1"/>
        </actionGroup>
        <!-- Click on the storefront layered navigation first attribute option -->
        <actionGroup ref="StorefrontFilterCategoryPageByAttributeOptionActionGroup" stepKey="filterCategoryByFirstOption1">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getFirstMultiselectProductAttributeOption.label$"/>
        </actionGroup>
        <!-- Verify storefront layered navigation first attribute value -->
        <actionGroup ref="StorefrontLayeredNavigationAttributeOptionActionGroup" stepKey="VerifyAttributeOptionValueForFirstProduct">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getFirstMultiselectProductAttributeOption.label$"/>
        </actionGroup>

        <!--Check filtration options for created attribute. All attribute options should be displayed -->
        <actionGroup ref="AssertStorefrontAttributeOptionPresentInLayeredNavigationActionGroup" stepKey="assertAttributeOption2PresentInLayeredNavigation">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getSecondMultiselectProductAttributeOption.label$"/>
            <argument name="attributeOptionPosition" value="2"/>
        </actionGroup>
        <!-- Click on the storefront layered navigation second attribute option -->
        <actionGroup ref="StorefrontFilterCategoryPageByAttributeOptionActionGroup" stepKey="filterCategoryBySecondOption2">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getSecondMultiselectProductAttributeOption.label$"/>
        </actionGroup>
        <!-- Verify storefront layered navigation second attribute value -->
        <actionGroup ref="StorefrontLayeredNavigationAttributeOptionActionGroup" stepKey="VerifyAttributeOptionValueForSecondProduct">
            <argument name="attributeLabel" value="$createMultiSelectProductAttribute.attribute[frontend_labels][0][label]$"/>
            <argument name="attributeOptionLabel" value="$getSecondMultiselectProductAttributeOption.label$"/>
        </actionGroup>
    </test>
</tests>
