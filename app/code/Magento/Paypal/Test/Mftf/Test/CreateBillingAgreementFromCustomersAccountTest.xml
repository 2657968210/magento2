<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="CreateBillingAgreementFromCustomersAccountTest">
        <annotations>
            <features value="PayPal"/>
            <stories value="Billing Agreement"/>
            <title value="Create Billing Agreement from customer's Account"/>
            <description value="Create Billing Agreement from customer's Account"/>
            <severity value="MAJOR"/>
            <testCaseId value="AC-5101"/>
            <group value="paypal"/>
        </annotations>
        <before>
            <!--Enable free shipping method -->
            <magentoCLI command="config:set {{EnableFreeShippingConfigData.path}} {{EnableFreeShippingConfigData.value}}" stepKey="enableFreeShipping"/>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <!-- New Customer -->
            <createData entity="Simple_US_Customer" stepKey="createCustomer">
                <field key="firstname">John1</field>
                <field key="lastname">Doe1</field>
            </createData>
            <actionGroup ref="AdminPayPalExpressCheckoutEnableActionGroup" stepKey="ConfigPayPalExpress">
                <argument name="credentials" value="SamplePaypalExpressConfig2"/>
            </actionGroup>
            <actionGroup ref="AdminPayPalExpressCheckoutEnableBillingAgreementActionGroup" stepKey="enableBillingAgreement">
                <argument name="countryCode" value="us"/>
            </actionGroup>
        </before>
        <after>
            <magentoCLI command="config:set {{DisableFreeShippingConfigData.path}} {{DisableFreeShippingConfigData.value}}" stepKey="disableFreeShipping"/>
            <magentoCLI command="config:set paypal/general/merchant_country US" stepKey="setMerchantCountry"/>
            <magentoCLI command="config:set payment/paypal_express/active 0" stepKey="disablePayPalExpress"/>
            <magentoCLI command="config:set payment/wps_express/active 0" stepKey="disableWPSExpress"/>
            <magentoCLI command="config:set payment/hosted_pro/active 0" stepKey="disableHostedProExpress"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!--Log in to Storefront as Customer-->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="signUpNewUser">
            <argument name="Customer" value="$$createCustomer$$"/>
        </actionGroup>
        <!-- Go to Billing Agreement Section and click on dropdown-->
        <click selector="{{StorefrontCustomerSidebarSection.sidebarCurrentTab('Billing Agreements')}}" stepKey="clickOnMyOrders"/>
        <selectOption selector ="{{StorefrontBillingAgreementSection.billingAgreementDropdown}}" userInput="PayPal Billing Agreement" stepKey="enableSandboxMode"/>
        <click selector="{{StorefrontBillingAgreementSection.createButton}}" stepKey="clickCreateButton"/>
        <reloadPage stepKey="refreshPage1"/>
        <reloadPage stepKey="refreshPage2"/>
        <reloadPage stepKey="refreshPage3"/>
        <!-- Login to paypal to create Billing Agreement-->
        <click selector="{{StorefrontBillingAgreementSection.expandLogin}}" stepKey="expandLogin"/>
        <waitForPageLoad stepKey="waitToLoadLoginPage" time="10"/>
        <click selector="{{StorefrontBillingAgreementSection.loginButton}}" stepKey="clickOnLogin"/>
        <waitForPageLoad stepKey="waitForBillingAgreementPage" time="10"/>
        <actionGroup ref="BillingAgreementPayPalPaymentActionGroup" stepKey="loginPaypal"/>
        <click selector="{{StorefrontBillingAgreementSection.agreeAndContinue}}" stepKey="clickContinue"/>
        <waitForPageLoad stepKey="waitForAgreeAndContinue"/>
        <grabTextFrom selector="{{StorefrontBillingAgreementSection.billingAgreementId}}" stepKey="billingID"/>
        <grabTextFrom selector="{{StorefrontBillingAgreementSection.successMessageNew}}" stepKey="grabSuccessMessage"/>
        <waitForPageLoad stepKey="waitToGrabSuccessMessage" time="10"/>
        <!-- Assert Billing Agreement ID in Storefront-->
        <assertStringContainsString stepKey="AssertProduct2">
            <actualResult type="const">$grabSuccessMessage</actualResult>
            <expectedResult type="string">$billingID</expectedResult>
        </assertStringContainsString>
        <!-- Go to "all customers" page in Admin -->
        <actionGroup ref="AdminOpenCustomersGridActionGroup" stepKey="navigateToCustomersPage"/>
        <!-- Filter by first customer email and Verify Billing Agreement ID-->
        <actionGroup ref="AdminFilterCustomerGridByEmail" stepKey="filterByFullValue">
            <argument name="email" value="$$createCustomer.email$$"/>
        </actionGroup><actionGroup ref="AdminClickFirstRowEditLinkOnCustomerGridActionGroup" stepKey="openCustomerEditPage"/>
        <click selector="{{AdminCustomerInformationSection.billingAgreements}}" stepKey="clickOnBillingAgreements"/>
        <grabTextFrom selector="{{AdminBillingAgreementSection.billingAgreementId}}" stepKey="grabBillingID"/>
        <assertEquals stepKey="assertSecondProductMapPrice">
            <actualResult type="const">$grabBillingID</actualResult>
            <expectedResult type="string">$billingID</expectedResult>
        </assertEquals>
    </test>
</tests>
